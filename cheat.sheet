####################
######  TMUX  ######
####################

# rename-window
    prefix-,

# rename-session
    prefix-$

# detach from sessions
    prefix-d


# move another pane to current window
    join-pane [-hv] -s :1
    # -h for horizontal stack (i.e., vert split)
        ## mapped to prefix + V
    # -v for vert stack (i.e., horizont split)
        ## mapped to prefix + S

# break pane into its own window
    prefix-!

## copying text
    prefix-[ = enter movement/copy mode
    Space = start copy mode
    Enter = copy selection
    prefix-] = paste

# view settings
    show-options
    -g - show global settings

# next layout
    prefix-space

# defaults for pane resizing / default layouts
# note that M(eta) key is alt, by def(ault)
prefix M-1  = vertical split, all panes same width
|-------|-------|-------|
|       |       |       |
|   0   |   1   |   2   |
|       |       |       |
|-------|-------|-------|

prefix M-2  = horizontal split, all panes same height
|-----------------------|
|          0            |
|-----------------------|
|          1            |
|-----------------------|
|          2            |
|-----------------------|

prefix M-3  = horizontal split, main pane on top
|-----------------------|
|          0            |
|-----------------------|
|   1  |    2   |   3   |
|-----------------------|

prefix M-4  = vertical split, main pane left
|-------|-------|
|       |   1   |
|   0   |-------|
|       |   2   |
|-------|-------|

prefix M-5  = tile, new panes on bottom, same height before same width
|-------|-------|
|   0   |   1   |
|-------|-------|
|   2   |   3   |
|-------|-------|


####################
######  VIM  #######
####################

# command line window (with normal mode powers like move/cw/etc)
    ctrl-f - from command mode
    q:, q/, q? - from normal mode

# fugitive
    - search git history - :Glog -S *some_pattern* --
    - make commit = cc in Gstatus window

# open alternate file
    - C-^

# end macro in insert mdoe
   - C-o    -   to enter single normal mode command
   - q      -   quit

# chain multiple commands in vim script
    - use pipe |

# syntax for UltiSnips to use vimscript
    `!v execute("command in here | second command")`
    # note backticks, parens, quotes and optional pipe
    # execute seems needed to run arbitrary commands, but maybe nt

####################
#####  MUTT  #######
####################

# cancel prompt
    - ctrl-g

# view other mailboxes
    - y

# sync (i.e., actually delete marked)
    - $

# tag all messages matching a pattern
    - T

# show only messages matching a pattern <tag-pattern>
    - l

# apply next function to all tagged messages <tag-prefix>
    - ;

# clear flag <clear-flag>
    - W (uppercase adds flags)
    - w (lowercase is to add flag)




####################
#####  ARCH  #######
####################

# downgrade pkg
    pacman -U /var/cache/pacman/pkg/old-pkg-version

####################
#### CALCURSE ######
####################

# to move date of appt:
    -specify date as month/day (e.g., 1/1 for jan 1)

####################
##### Docker #######
####################

# detach from running container
    - ^P ^Q

# following section lifted from https://github.com/wsargent/docker-cheat-sheet
# note that all commands prefixed with "(sudo) docker"

## ## ## ## ##
# Containers
## ## ## ## ##

    ## Lifecyle
        create - creates a container but does not start it
        rename - allows the container to be renamed
        run - creates and starts a container in one operation
        rm - deletes a container
        update - updates a container's resource limits

    ## Starting and Stopping
        start - starts a container so it is running
        stop - stops a running container
        restart - stops and starts a container
        pause - pauses a running container, "freezing" it in place
        unpause - will unpause a running container
        wait - blocks until running container stops
        kill - sends a SIGKILL to a running container
        attach - will connect to a running container

    ## Info
        ps - shows running containers
        logs - gets logs from container
        inspect - looks at all the info on a container
        events - gets events from container
        port - shows public facing port of container
        top - shows running processes in container
        stats - shows containers' resource usage statistics
        diff - shows changed files in the container's FS

## ## ## ## ##
# Images 
## ## ## ## ##

    ## Lifecycle
        images - shows all images
        import - creates an image from a tarball
        build - creates image from Dockerfile
        commit - creates image from a container
        rmi - removes an image.
        load - loads an image from a tar archive
        save - saves an image to a tar archive

    ## Info
        history - shows history of an image
        tag - tags an image to a name (local or registry)
